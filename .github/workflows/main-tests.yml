name: Main Branch Tests

on:
  push:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test
      env:
        CI: true

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/
        retention-days: 7

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_AZURE_AD_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_AZURE_AD_CLIENT_ID || 'dummy-client-id' }}
        NEXT_PUBLIC_AZURE_AD_TENANT_ID: ${{ secrets.NEXT_PUBLIC_AZURE_AD_TENANT_ID || 'dummy-tenant-id' }}
        NEXT_PUBLIC_AZURE_AD_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_AZURE_AD_REDIRECT_URI || 'http://localhost:3000' }}
        NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'http://localhost:3000' }}

    - name: Run E2E tests
      run: npm run test:e2e
      env:
        CI: true
        NEXT_PUBLIC_AZURE_AD_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_AZURE_AD_CLIENT_ID || 'dummy-client-id' }}
        NEXT_PUBLIC_AZURE_AD_TENANT_ID: ${{ secrets.NEXT_PUBLIC_AZURE_AD_TENANT_ID || 'dummy-tenant-id' }}
        NEXT_PUBLIC_AZURE_AD_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_AZURE_AD_REDIRECT_URI || 'http://localhost:3000' }}
        NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'http://localhost:3000' }}
        SESSION_SECRET: ${{ secrets.SESSION_SECRET || 'test-session-secret' }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-videos
        path: test-results/
        retention-days: 7

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [unit-tests]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run integration tests
      run: npm run test:integration
      env:
        CI: true
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY || 'dummy-api-key' }}
        SESSION_SECRET: ${{ secrets.SESSION_SECRET || 'test-session-secret' }}

  notify-on-failure:
    name: Notify on Test Failure
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests, integration-tests]
    if: failure()

    steps:
    - name: Send notification
      run: |
        echo "Tests failed on main branch!"
        echo "Failed job: ${{ github.job }}"
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}"